from django.shortcuts import render, get_object_or_404, redirect
from django.http import HttpResponseRedirect
from django.views.generic import TemplateView
from django.contrib import messages
from django.conf import settings
from product.models import Product
from .models import Cart, CartItem, Order, OrderItem, Payment
import stripe
import string
import random

stripe.api_key = settings.STRIPE_SECRET_KEY


class HomeView(TemplateView):
    # View for home page of site.
    template_name = 'home.html'


def create_ref_code():
    return ''.join(random.choices(string.ascii_uppercase + string.digits, k=12))


def add_to_cart(request, product_slug):
    product = get_object_or_404(Product, slug=product_slug)
    cart_item = CartItem.objects.create(product=product)
    cart, created = Cart.objects.get_or_create(user=request.user)
    cart.items.add(cart_item)
    cart.save()
    messages.info(request, product.name + ' is added to your cart')
    return HttpResponseRedirect(request.META.get("HTTP_REFERER"))


def remove_from_cart(request, cart_item_slug):
    cart_item = get_object_or_404(CartItem, slug=cart_item_slug)
    cart = Cart.objects.get(user=request.user)
    cart.items.remove(cart_item)
    cart_item.delete()
    cart.save()
    messages.info(request, cart_item.product.name + " successfully removed from your cart.")
    return HttpResponseRedirect(request.META.get("HTTP_REFERER"))


def cart_view(request):
    cart = get_object_or_404(Cart, user=request.user)
    context = {
        'cart': cart
    }
    return render(request, 'cart.html', context)


def thankyou(request):
    return render(request, 'thankyou.html', {})


def checkout(request):
    print(request.method)
    cart = get_object_or_404(Cart, user=request.user)

    if request.method == "POST":
        # complete the order
        cart.ref_code = create_ref_code()

        # create stripe charge
        # `source` is obtained with Stripe.js; see https://stripe.com/docs/payments/accept-a-payment-charges#web-create-token
        token = request.POST.get('stripeToken')
        charge = stripe.Charge.create(
            amount=int(cart.get_total() * 100),  # in cents, need to times 100
            currency="usd",
            source=token,  # obtained with Stripe.js
            description=f"Charge for {request.user.username}",
        )

        # create our payment object and link to the order
        payment = Payment()
        payment.cart = cart
        payment.stripe_charge_id = charge.id  # charge.id generated by stripe
        payment.total_amount = cart.get_total()
        payment.save()

        # add the order to the history list
        order = Order.objects.create(
            user=request.user,
            ref_code=cart.ref_code
        )

        for cart_item in cart.items.all():
            order_item = OrderItem.objects.create(product=cart_item.product)
            order.items.add(order_item)
            cart.items.remove(cart_item)
            cart_item.delete()
        order.save()
        cart.save()

        # redirect to a thank you page with continue shopping
        return redirect('controller:thankyou')

    context = {
        'cart': cart
    }
    return render(request, 'checkout.html', context)
